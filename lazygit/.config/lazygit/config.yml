gui:
    authorColors: {}
    branchColors: {}
    scrollHeight: 2
    scrollPastBottom: true
    scrollOffMargin: 2
    scrollOffBehavior: margin
    mouseEvents: true
    skipDiscardChangeWarning: false
    skipStashWarning: false
    skipNoStagedFilesWarning: false
    skipRewordInEditorWarning: false
    sidePanelWidth: 0.3333
    expandFocusedSidePanel: false
    mainPanelSplitMode: flexible
    enlargedSideViewLocation: left
    language: auto
    timeFormat: 2006-01-02
    shortTimeFormat: 15:04
    theme:
        activeBorderColor:
            - green
            - bold
        inactiveBorderColor:
            - default
        searchingActiveBorderColor:
            - cyan
            - bold
        optionsTextColor:
            - blue
        selectedLineBgColor:
            - blue
        cherryPickedCommitFgColor:
            - blue
        cherryPickedCommitBgColor:
            - cyan
        markedBaseCommitFgColor:
            - blue
        markedBaseCommitBgColor:
            - yellow
        unstagedChangesColor:
            - red
        defaultFgColor:
            - default
    commitLength:
        show: true
    showListFooter: true
    showFileTree: true
    showRandomTip: true
    showCommandLog: true
    showBottomLine: true
    showPanelJumps: true
    showIcons: false
    nerdFontsVersion: "3"
    showFileIcons: true
    showBranchCommitHash: false
    commandLogSize: 8
    splitDiff: auto
    windowSize: ""
    border: rounded
    animateExplosion: true
    portraitMode: auto
git:
    paging:
        colorArg: always
        pager: "diffr.sh"
        useConfig: false
        externalDiffCommand: ""
    commit:
        signOff: false
    merging:
        manualCommit: false
        args: ""
    mainBranches:
        - master
        - main
    skipHookPrefix: WIP
    autoFetch: true
    autoRefresh: true
    fetchAll: true
    branchLogCmd: git log --graph --color=always --abbrev-commit --decorate --date=relative --pretty=medium {{branchName}} --
    allBranchesLogCmd: git log --graph --all --color=always --abbrev-commit --decorate --date=relative  --pretty=medium
    overrideGpg: true
    disableForcePushing: false
    commitPrefixes: {}
    parseEmoji: false
    log:
        order: topo-order
        showGraph: always
        showWholeGraph: false
update:
    method: prompt
    days: 14
refresher:
    refreshInterval: 10
    fetchInterval: 60
confirmOnQuit: false
quitOnTopLevelReturn: false
keybinding:
    universal:
        quit: q
        quit-alt1: <c-c>
        return: <esc>
        quitWithoutChangingDirectory: Q
        togglePanel: <tab>
        prevItem: <up>
        nextItem: <down>
        prevItem-alt: k
        nextItem-alt: j
        prevPage: ','
        nextPage: .
        scrollLeft: H
        scrollRight: L
        gotoTop: <
        gotoBottom: '>'
        toggleRangeSelect: v
        rangeSelectDown: <s-down>
        rangeSelectUp: <s-up>
        prevBlock: <left>
        nextBlock: <right>
        prevBlock-alt: h
        nextBlock-alt: l
        nextBlock-alt2: <tab>
        prevBlock-alt2: <backtab>
        jumpToBlock:
            - "1"
            - "2"
            - "3"
            - "4"
            - "5"
        nextMatch: "n"
        prevMatch: "N"
        startSearch: /
        optionMenu: <disabled>
        optionMenu-alt1: '?'
        select: <space>
        goInto: <enter>
        confirm: <enter>
        confirmInEditor: <a-enter>
        remove: d
        new: "n"
        edit: e
        openFile: o
        scrollUpMain: <pgup>
        scrollDownMain: <pgdown>
        scrollUpMain-alt1: K
        scrollDownMain-alt1: J
        scrollUpMain-alt2: <c-u>
        scrollDownMain-alt2: <c-d>
        executeCustomCommand: ':'
        createRebaseOptionsMenu: m
        pushFiles: P
        pullFiles: p
        refresh: R
        createPatchOptionsMenu: <c-p>
        nextTab: ']'
        prevTab: '['
        nextScreenMode: +
        prevScreenMode: _
        undo: z
        redo: <c-z>
        filteringMenu: <c-s>
        diffingMenu: W
        diffingMenu-alt: <c-e>
        copyToClipboard: <c-o>
        openRecentRepos: <c-r>
        submitEditorText: <enter>
        extrasMenu: '@'
        toggleWhitespaceInDiffView: <c-w>
        increaseContextInDiffView: '}'
        decreaseContextInDiffView: '{'
        openDiffTool: <c-t>
    status:
        checkForUpdate: u
        recentRepos: <enter>
        allBranchesLogGraph: a
    files:
        commitChanges: c
        commitChangesWithoutHook: w
        amendLastCommit: A
        commitChangesWithEditor: C
        findBaseCommitForFixup: <c-f>
        confirmDiscard: x
        ignoreFile: i
        refreshFiles: r
        stashAllChanges: s
        viewStashOptions: S
        toggleStagedAll: a
        viewResetOptions: D
        fetch: f
        toggleTreeView: '`'
        openMergeTool: M
        openStatusFilter: <c-b>
        copyFileInfoToClipboard: "y"
    branches:
        createPullRequest: o
        viewPullRequestOptions: O
        copyPullRequestURL: <c-y>
        checkoutBranchByName: c
        forceCheckoutBranch: F
        rebaseBranch: r
        renameBranch: R
        mergeIntoCurrentBranch: M
        viewGitFlowOptions: i
        fastForward: f
        createTag: T
        pushTag: P
        setUpstream: u
        fetchRemote: f
        sortOrder: s
    worktrees:
        viewWorktreeOptions: w
    commits:
        squashDown: s
        renameCommit: r
        renameCommitWithEditor: R
        viewResetOptions: g
        markCommitAsFixup: f
        createFixupCommit: F
        squashAboveCommits: S
        moveDownCommit: <c-j>
        moveUpCommit: <c-k>
        amendToCommit: A
        resetCommitAuthor: a
        pickCommit: p
        revertCommit: t
        cherryPickCopy: C
        pasteCommits: V
        markCommitAsBaseForRebase: B
        tagCommit: T
        checkoutCommit: <space>
        resetCherryPick: <c-R>
        copyCommitAttributeToClipboard: "y"
        openLogMenu: <c-l>
        openInBrowser: o
        viewBisectOptions: b
        startInteractiveRebase: i
    stash:
        popStash: g
        renameStash: r
    commitFiles:
        checkoutCommitFile: c
    main:
        toggleSelectHunk: a
        pickBothHunks: b
        editSelectHunk: E
    submodules:
        init: i
        update: u
        bulkMenu: b
    commitMessage:
        switchToEditor: <c-o>
disableStartupPopups: false
customCommands:
  - key: "o"
    command: "gh pr create --fill --web"
    context: "global"
    loadingText: "Creating pull request on GitHub"
  - key: "<c-v>"
    context: "global"
    description: "Create new conventional commit"
    prompts:
      - type: "menu"
        key: "Type"
        title: "Type of change"
        options:
          - name: "build"
            description: "Changes that affect the build system or external dependencies"
            value: "build"
          - name: "feat"
            description: "A new feature"
            value: "feat"
          - name: "fix"
            description: "A bug fix"
            value: "fix"
          - name: "chore"
            description: "Other changes that don't modify src or test files"
            value: "chore"
          - name: "ci"
            description: "Changes to CI configuration files and scripts"
            value: "ci"
          - name: "docs"
            description: "Documentation only changes"
            value: "docs"
          - name: "perf"
            description: "A code change that improves performance"
            value: "perf"
          - name: "refactor"
            description: "A code change that neither fixes a bug nor adds a feature"
            value: "refactor"
          - name: "revert"
            description: "Reverts a previous commit"
            value: "revert"
          - name: "style"
            description: "Changes that do not affect the meaning of the code"
            value: "style"
          - name: "test"
            description: "Adding missing tests or correcting existing tests"
            value: "test"
      - type: "input"
        title: "Scope - Add '(<scope>)'"
        key: "Scope"
        initialValue: ""
      - type: "input"
        title: "Breaking change - Add '!'"
        key: "Breaking"
        initialValue: ""
      - type: "input"
        title: "message"
        key: "Message"
        initialValue: ""
      - type: "confirm"
        key: "Confirm"
        title: "Commit"
        body: "Are you sure you want to commit?"
    command: "git commit --message '{{.Form.Type}}{{.Form.Scope}}{{.Form.Breaking}}: {{.Form.Message}}'"
    loadingText: "Creating conventional commit..."
services: {}
notARepository: prompt
promptToReturnFromSubprocess: true

